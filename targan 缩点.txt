#include<iostream>
#include<cstdio>
#include<cstring>

using namespace std;

const int VM=20010;
const int EM=50010;
const int INF=0x3f3f3f3f;

struct Edge{
    int to,nxt;
}edge[EM<<1];

int n,m,cnt,head[VM];
int dep,top,atype;
int dfn[VM],low[VM],vis[VM],stack[VM],belong[VM],indeg[VM],outdeg[VM];

void addedge(int cu,int cv){
    edge[cnt].to=cv;    edge[cnt].nxt=head[cu];     head[cu]=cnt++;
}

void Tarjan(int u){
    dfn[u]=low[u]=++dep;
    stack[top++]=u;
    vis[u]=1;
    for(int i=head[u];i!=-1;i=edge[i].nxt){
        int v=edge[i].to;
        if(!dfn[v]){
            Tarjan(v);
            low[u]=min(low[u],low[v]);
        }else if(vis[v]){
            low[u]=min(low[u],dfn[v]);
        }
    }
    int j;
    if(dfn[u]==low[u]){
        atype++;
        do{
            j=stack[--top];
            belong[j]=atype;
            vis[j]=0;
        }while(u!=j);
    }
}

void init(){
    cnt=0;
    memset(head,-1,sizeof(head));
    dep=0,  top=0,  atype=0;
    memset(dfn,0,sizeof(dfn));
    memset(low,0,sizeof(low));
    memset(vis,0,sizeof(vis));
    memset(belong,0,sizeof(belong));
    memset(indeg,0,sizeof(indeg));
    memset(outdeg,0,sizeof(outdeg));
}

int main(){

    //freopen("input.txt","r",stdin);

    int t;
    scanf("%d",&t);
    while(t--){
        scanf("%d%d",&n,&m);
        if(n==1){   //特判1（n==1,m==0)
            printf("0\n");
            continue;
        }
        if(m==0){   //特判2( n==?,m==0)
            printf("%d\n",n);
            continue;
        }
        init();
        int u,v;
        while(m--){
            scanf("%d%d",&u,&v);
            addedge(u,v);
        }
        for(int i=1;i<=n;i++)
            if(!dfn[i])
                Tarjan(i);
        if(atype==1){   //如果强连通个数为1,
            printf("0\n");
            continue;
        }
        for(int u=1;u<=n;u++)
            for(int i=head[u];i!=-1;i=edge[i].nxt){
                int v=edge[i].to;
                if(belong[u]!=belong[v]){
                    outdeg[belong[u]]++;
                    indeg[belong[v]]++;
                }
            }
        int ans1=0,ans2=0;
        //printf("atype=%d\n",atype);
        for(int i=1;i<=atype;i++){
            if(indeg[i]==0)
                ans1++;
            if(outdeg[i]==0)
                ans2++;
        }
        //printf("         ans1=%d   ans2=%d\n",ans1,ans2);
        printf("%d\n",max(ans1,ans2));  //至少加几条边让整个图变成强连通（即，出度或入度的最大值）
    }
    return 0;
}