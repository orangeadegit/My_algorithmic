#include<cstdio>
#include<iostream>
#include<cmath>
#include<stack>
#include<algorithm>
#include<string>
#include<cstring>
#include<vector>
#include<queue>
#include <functional>
#include<map>
#include<iomanip>
#include<set>
#include <utility>
#include<queue>
#include<bitset>
#include <numeric>
#define ll long long
#define maxn 200001
#define lson l , m , rt << 1
#define rson m + 1 , r , rt << 1 | 1
const int mod = 142857;
const double pi = acos(-1);
const double eps = 1e-8;
const int inf = 100000000;
using namespace std;
struct Point {
	double x, y;
};
double cross(Point a, Point b, Point c) 
{  
return (a.x - c.x)*(b.y - c.y) - (b.x - c.x)*(a.y - c.y);
}
//计算多边形面积  
double PolygonArea(Point p[], int n)
{
	if (n < 3) return 0.0;
	double s = p[0].y * (p[n - 1].x - p[1].x);
	p[n] = p[0];
	for (int i = 1; i < n; ++i)
		s += p[i].y * (p[i - 1].x - p[i + 1].x);
	return s * 0.5;
}
Point p1[maxn];
int n1;
int main()
{
	while (~scanf("%d", &n1),n1) {
		for (int i = 0; i < n1; i++)
			scanf("%lf%lf", &p1[i].x, &p1[i].y);
		double ans = PolygonArea(p1, n1);
		if (ans > 0)
			printf("CCW %.1f\n", ans);
		else
			printf("CW %.1f\n",-ans);
	}
	return 0;
}