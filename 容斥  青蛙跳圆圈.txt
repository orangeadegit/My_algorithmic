#include<cstdio>
#include<iostream>
#include<cmath>
#include<stack>
#include<algorithm>
#include<string>
#include<cstring>
#include<vector>
#include<queue>
#include <functional>
#include<map>
#include<iomanip>
#include<set>
#include <utility>
#include<queue>
#include<bitset>
#define ll long long
#define maxn 10026
const ll mod = 1000000007;
const double pi = acos(-1);
const double eps = 1e-9;
const int inf = 1e9;
using namespace std;
ll n, m,a[maxn],vis[maxn],tmp[maxn],num[maxn],x;
ll gcd(ll a, ll b) { return a == 0 ? b : gcd(b % a, a); }
int main()
{
	int t, cas = 1;
	scanf("%d", &t);
	while (t--)
	{    
		int cnt = 0;
		scanf("%lld%lld", &n, &m);
		for (int i = 0; i < n; i++)scanf("%lld", &a[i]);
		for (ll i = 1; i*i <= m; i++)
		{
			if (m%i == 0)
			{
				if (i*i != m)tmp[cnt++] = i;
				tmp[cnt++] = m / i;
			}
		}
		sort(tmp, tmp + cnt);
		memset(vis, 0, sizeof(vis));
		memset(num, 0, sizeof(num));
		for(int i=0;i<n;i++)
		{
			x = gcd(a[i], m);
			for (int j = 0; j < cnt - 1; j++)
				if (tmp[j] % x == 0)vis[j] = 1;
		}
		ll ans = 0,d;
		for(int i=0;i<cnt-1;i++)
		{
			if (num[i] != vis[i])
			{
				ans += m / tmp[i] * (m / tmp[i] - 1)/2*tmp[i] * (vis[i] - num[i]);
				d = vis[i] - num[i];
				for (int j = i; j < cnt - 1; j++)if (tmp[j] % tmp[i] == 0)num[j] += d;
		    }
		}
		printf("Case #%d: %lld\n",cas++,ans);
	}
	//system("pause");
	return 0;

}