#include<cstdio>
#include<iostream>
#include<cmath>
#include<stack>
#include<algorithm>
#include<string>
#include<cstring>
#include<vector>
#include<queue>
#include <functional>
#include<map>
#include<iomanip>
#include<set>
#include <utility>
#include<queue>
#include<bitset>
#define ll long long
#define maxn 1000005
#define lson l , m , rt << 1
#define rson m + 1 , r , rt << 1 | 1
const int mod = 1000000007;
const double pi = acos(-1);
const double eps = 1e-9;
const int inf = 1000000000;
using namespace std;
int a[maxn], mm[maxn][21],n,l,r,Q;
void init_rmq()
{
	for (int i = 1; i <= n; i++)mm[i][0] = a[i];
	for (int j = 1; (1 << j) <= n; j++)for (int i = 1; i + (1 << j) - 1 <= n; i++)
		mm[i][j] = min(mm[i][j - 1], mm[i +( 1 << (j - 1))][j - 1]);
}
struct node
{
	int l, r;
}q[maxn];
int main()
{
	scanf("%d", &n);
	for (int i = 1; i <= n; i++)scanf("%d", &a[i]);
	init_rmq();
	scanf("%d", &Q);
	for(int i=1;i<=Q;i++)scanf("%d%d", &q[i].l, &q[i].r);
	for (int i = 1; i <= Q; i++)
	{
		int k = log2(q[i].r -q[i].l + 1);
		printf("%d\n", min(mm[q[i].l][k], mm[q[i].r - (1 << k) + 1][k]));
	}
	return 0;
}

